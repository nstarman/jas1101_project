[metadata]
name = jas1101finalproject
author = Nathaniel and Qing and Vivian
author_email = 
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = http://docs.astropy.org/projects/package-template/
description = JAS1101FinalProject
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = astropy/astropy

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    numpy
    scipy
    tqdm
    astropy
    astroquery
    typing_extensions
    agama
    matplotlib
    seaborn


[options.entry_points]
console_scripts =
    jas1101_final_project_get_globular_clusters = jas1101finalproject.scripts.get_globular_clusters.__init__:main
    jas1101_final_project_norm_globular_clusters = jas1101finalproject.scripts.normalize_globular_clusters.__init__:main


[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
jas1101finalproject = data/*

[tool:pytest]
testpaths = "jas1101finalproject" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    jas1101finalproject/_astropy_init*
    jas1101finalproject/conftest.py
    jas1101finalproject/*setup_package*
    jas1101finalproject/tests/*
    jas1101finalproject/*/tests/*
    jas1101finalproject/extern/*
    jas1101finalproject/version*
    */jas1101finalproject/_astropy_init*
    */jas1101finalproject/conftest.py
    */jas1101finalproject/*setup_package*
    */jas1101finalproject/tests/*
    */jas1101finalproject/*/tests/*
    */jas1101finalproject/extern/*
    */jas1101finalproject/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
